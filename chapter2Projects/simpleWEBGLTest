<html>
<head>
    <script src="../libs/jquery-1.9.1/jquery-1.9.1.js"></script>
    <script src="../libs/gl-matrix/gl-matrix.js"></script>
    <script src="../libs/requestAnimationFrame/RequestAnimationFrame.js"></script>
</head>
<body>
<canvas id="myCanvas" width="640" height="480" style="border:1px ridge #000000;"></canvas>
<script type="text/javascript">
    function initWebGL(canvas) {

        var gl = null;
        var msg = "Your browser does not support WebGL, or it is not enabled by default.";
        try
        {
            gl = canvas.getContext("experimental-webgl");
        }
        catch (e)
        {
            msg = "Error creating WebGl Context!: " + e.toString();
        }

        if(!gl)
        {
            alert(msg);
            throw new Error(msg);
        }
        return gl;
    }

    function initViewport(gl, canvas)
    {
        gl.viewport(0, 0, canvas.width, canvas.height);
    }

    //Create the vertex data for a square to be drawn.
    function createSquare(gl) {
        var vertexBuffer;
        vertexBuffer = gl.createBuffer();
        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);
        var verts = [
                .5, .5, 0.0,
                -.5, .5, 0.0,
                .5, -.5, 0.0,
                -.5, -.5, 0.0
                ];
        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);
        var square = {buffer:vertexBuffer, vertSize:3, nVerts:4, primtype:gl.TRIANGLE_STRIP};
        return square;
    }

    var projectionMatrix;
    var modelViewMatrix;
    function initMatrices(canvas){
        //Create a model view matrix with camera at 0,0,-3.333
        modelViewMatrix = mat4.create();
        mat4.translate(modelViewMatrix, modelViewMatrix, [0, 0, -3.333]);
        //Create a project matrix with 45 degree field of view.
        projectionMatrix = mat4.create();
        mat4.perspective(projectionMatrix, Math.PI /4, canvas.width / canvas.height, 1 , 10000);

    }
</script>
</body>
</html>